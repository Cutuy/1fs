Effective knowledge finding > Personal organization vs public view of directory

## Objective
[vview-o1 âœ”] Provide the same view for an existing directory at another place
[vview-o2 ðŸŸ¢] Provide a different view for the projected directory

## Key Results
[vview-o1-kr1 âœ”] Project a hierarchical directory with arbitrary in-mem data that supports placeholder enumeration
[vview-o1-kr2 âœ”] An exisiting directory is "captured" by 1fs and then projected
[vview-o1-kr3 âœ”] The file data, upon requested, is "projected" from its original location
<del>[vview-o2-kr1] Track moves of each individual file</del>
[vview-o2-kr1a âœ”] Track moves of file for enumeration of directory
[vview-o2-kr1b âœ”] Track moves of file for finding physical path of a placeholder
[vview-o2-kr2 ðŸŸ¢] The tracking info is persisted then restored (disk<->mem)
[vview-o2-kr3] Restore the modified projection upon a new projection for all files previously projected

## Next (12/28)
Refactor required to correctly address diff between "file path" from projfs and win32
Code quality update
(later) Encapsulate in a class/lib that runs as a console app

## Notes (12/30)
It seems ProjFS does not support rename/move of a directory. This, however, is crtical to our feature...
- Workaround: create a shadow file for each directory, with which the user can move around


## Notes (12/31)
Needs to break down abit for [vview-o2-kr1] because it is f* too hard!

## Notes (1/1)
Yet it seems I finished [vview-o2-kr1] :)

## Technical design principles
- Always lazy load/find the physical path upon request; never do the opposite